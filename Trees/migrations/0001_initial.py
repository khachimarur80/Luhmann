# Generated by Django 4.1.2 on 2022-12-14 19:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ancestors', models.TextField(blank=True, default='', null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_reference', models.BooleanField(default=False)),
                ('is_embed', models.BooleanField(default=False)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('source', models.TextField(blank=True, default='', null=True)),
                ('text', models.TextField(default='')),
                ('image', models.ImageField(blank=True, default='', null=True, upload_to='')),
                ('thumbnail', models.ImageField(blank=True, default='', null=True, upload_to='')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('order', models.IntegerField(default=0)),
                ('inbox', models.BooleanField(default=False)),
                ('selected', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('important', models.BooleanField(default=False)),
                ('references', models.TextField(blank=True, default='', null=True)),
                ('reference_origin', models.IntegerField(blank=True, null=True)),
                ('branch_folders', models.TextField(blank=True, default='', null=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='')),
                ('video', models.TextField(blank=True, default='', null=True)),
                ('tags', models.TextField(blank=True, default='', null=True)),
                ('style', models.CharField(default='None', max_length=10)),
                ('pinned', models.BooleanField(default=False, null=True)),
                ('leaf_parent', models.IntegerField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ColorTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='')),
                ('background', models.TextField(default='')),
                ('backgroundDark', models.TextField(default='')),
                ('leaf', models.TextField(default='')),
                ('text', models.TextField(default='')),
                ('link', models.TextField(default='')),
                ('hide', models.TextField(default='')),
                ('inbox', models.TextField(default='')),
                ('select', models.TextField(default='')),
                ('shadow', models.TextField(default='')),
                ('icolor', models.TextField(default='')),
                ('box', models.TextField(default='')),
                ('success', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('leaf', models.IntegerField(blank=True, null=True)),
                ('is_issue', models.BooleanField(default=False)),
                ('issue_solved', models.BooleanField(default=False)),
                ('upvotes', models.IntegerField(default=0)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('picture', models.ImageField(blank=True, default='', null=True, upload_to='')),
                ('owner', models.IntegerField(blank=True, null=True)),
                ('verified', models.BooleanField(blank=True, default=False, null=True)),
                ('group_font', models.TextField(default='HelveticaNeue-Thin')),
                ('background_image', models.ImageField(blank=True, default='', null=True, upload_to='')),
                ('editors', models.ManyToManyField(blank=True, related_name='editors', to=settings.AUTH_USER_MODEL)),
                ('inbox', models.ManyToManyField(blank=True, related_name='group_inbox', to='Trees.branch')),
                ('issues', models.ManyToManyField(blank=True, to='Trees.comment')),
                ('profileTheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Trees.colortheme')),
                ('readers', models.ManyToManyField(blank=True, related_name='readers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField(default='')),
                ('name', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField(default='')),
                ('picture', models.ImageField(blank=True, default='', null=True, upload_to='')),
                ('profileFont', models.TextField(default='')),
                ('friends', models.ManyToManyField(blank=True, related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(to='Trees.group')),
                ('hidden', models.ManyToManyField(blank=True, related_name='leaf_hidden', to='Trees.branch')),
                ('inbox', models.ManyToManyField(blank=True, related_name='leaf_inbox', to='Trees.branch')),
                ('issues', models.ManyToManyField(blank=True, to='Trees.comment')),
                ('profileTheme', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Trees.colortheme')),
                ('selected', models.ManyToManyField(blank=True, related_name='leaf_selected', to='Trees.branch')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('background', models.ImageField(default='', upload_to='')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('branches', models.ManyToManyField(to='Trees.branch')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Trees.group')),
            ],
        ),
        migrations.AddField(
            model_name='branch',
            name='bibliography',
            field=models.ManyToManyField(blank=True, to='Trees.reference'),
        ),
        migrations.AddField(
            model_name='branch',
            name='comments',
            field=models.ManyToManyField(blank=True, to='Trees.comment'),
        ),
        migrations.AddField(
            model_name='branch',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Trees.group'),
        ),
        migrations.AddField(
            model_name='branch',
            name='leaves',
            field=models.ManyToManyField(blank=True, to='Trees.branch'),
        ),
    ]
